#!/ur/bin/env python
from __future__ import print_function, division
from astropy.io import fits
from argparse import ArgumentParser
from astropy.time import Time

def main(args):
    uvfits = fits.open(args.uvfits)
    ra = uvfits[0].header["CRVAL5"]
    dec = uvfits[0].header['CRVAL6']
    #date_obs = uvfits[0].header['DATE-OBS']
    start_utc = str(Time(Time(int(args.obs), format="gps"),format="iso",scale="utc"))
    start_utc = datetime.strptime(start_utc, '%Y-%m-%d %H:%M:%S.%f')
    date_obs = str(start_utc.year) + "-" + str(start_utc.month).zfill(2) + "-" +\
            str(start_utc.day).zfill(2) + "T" +  str(start_utc.hour) + ":" + \
            str(start_utc.minute) + ":" + str(start_utc.second + start_utc.microsecond/1000000.0)

    
    ## create new metafits file
    new_header = fits.Header({"RA" : ra, "DEC" : dec, "DATE-OBS" : date_obs, "COMMENT" : "metafits generated by steve, as it is required by the shift-stack pipeline"})
    hdu = fits.PrimaryHDU(header=new_header)
    hdul = fits.HDUList([hdu])
    hdul.writeto('{}.metafits'.format(args.obs))







if __name__ == "__main__":
    parser = ArgumentParser("makeMetaFits", description="creates metafits file from uvfits file")
    parser.add_argument("--uvfits", required=True, help="the uvfits file for the observation")
    parser.add_argument("--exposure", default=120, type=int, help="the exposure of the observation")
    parser.add_argument("--obs", required=True, type=int, help="the obs id of the observation")
    args = parser.parse_args()

    main(args)

